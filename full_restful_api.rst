:author: Charles Callaway
:date: 21-10-2022
:modified: 14-11-2022
:tags: index
:lang: en-US
:translation: false
:status: initial

.. include:: sphinx-roles.txt



.. _alyvix_service_restful_api_top:

==================
Alyvix Service API
==================

This section describes in technical detail the Alyvix Service API methods.  These
methods are sufficient to allow you to integrate Alyvix Service into any monitoring system,
which can then use its own graphical user interface to display data and launch actions.

API calls are based on a root URL of the form ``https://<alyvix_service_ip>:<port>`` where
a GET, PUT, POST or DELETE call such as ``GET /license`` will result in a final URL of the form
``https://<alyvix_service_ip>:<port>/license``.

All return values will be in JSON format.  The included examples are written in Python.

.. warning::

   All API level 0 endpoints (marked "/v0/" through Alyvix Service v2.0.0) are insecure.
   They should only be used when both caller and server are contained entirely within the
   same private network.

|


.. _alyvix_service_restful_api_license:

*******************
Licensing Endpoints
*******************

These calls allow you to query and/or set licenses and license status.

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +-------------------------------------------------------------------------------------+
   | :lfs:`GET /license`                                                                 |
   +----+--------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                 |
   +----+--------------------------------------------------------------------------------+
   |    | Retrieve the content of an existing license on the specified Alyvix Node.      |
   +----+--------------------------------------------------------------------------------+
   | :lfs:`Required/Optional Arguments:`                                                 |
   +----+--------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                 |
   +----+--------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                     |
   +----+--------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.get(https://<server:port>/license, verify=False).json()` |
   +----+--------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +----------------------------------------------------------------------------------------------------------------------+
   | :lfs:`POST /license`                                                                                                 |
   +----+-----------------------------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                                                  |
   +----+-----------------------------------------------------------------------------------------------------------------+
   |    | Set the content of a license, replacing the current one if it exists.                                           |
   +----+-----------------------------------------------------------------------------------------------------------------+
   | :lfs:`Required Arguments:`                                                                                           |
   +----+-----------------------------------------------------------------------------------------------------------------+
   |    | :ep-black:`license` :ep-red:`(string)`                                                                          |
   +----+-----------------------------------------------------------------------------------------------------------------+
   | :lfs:`Optional Arguments:`                                                                                           |
   +----+-----------------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                                                  |
   +----+-----------------------------------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                                                      |
   +----+-----------------------------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.post(https://<server:port>/license, json={"license": "123"}, verify=False).json()`        |
   +----+-----------------------------------------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +--------------------------------------------------------------------------------------------+
   | :lfs:`GET /license_status`                                                                 |
   +----+---------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                        |
   +----+---------------------------------------------------------------------------------------+
   |    | Retrieve the current status of the license for the specified Alyvix Node,             |
   |    | returning the string "no" if not currently valid, and "yes" otherwise.                |
   +----+---------------------------------------------------------------------------------------+
   | :lfs:`Required/Optional Arguments:`                                                        |
   +----+---------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                        |
   +----+---------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                            |
   +----+---------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.get(https://<server:port>/license_status, verify=False).json()` |
   +----+---------------------------------------------------------------------------------------+

|
|



.. _alyvix_service_restful_api_settings:

******************
Settings Endpoints
******************

Change or retrieve the high level, general settings governing an entire Alyvix Node.

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +------------------------------------------------------------------------------------------+
   | :lfs:`GET /settings`                                                                     |
   +----+-------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                      |
   +----+-------------------------------------------------------------------------------------+
   |    | Retrieve an Alyvix Node's general settings.                                         |
   +----+-------------------------------------------------------------------------------------+
   | :lfs:`Required/Optional Arguments:`                                                      |
   +----+-------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                      |
   +----+-------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                          |
   +----+-------------------------------------------------------------------------------------+
   |    | :ep-black-s:`es. requests.get(https://<server:port>/settings, verify=False).json()` |
   +----+-------------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +---------------------------------------------------------------------------------------------------------------+
   | :lfs:`PUT /settings`                                                                                          |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | Set the same settings that are retrieved above.                                                          |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Required Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Optional Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black:`private_key` :ep-red:`(string)` default: *null* |p|                                           |
   |    | :ep-black:`successful_retention_period` :ep-red:`(int)` default: 1 |p|                                   |
   |    | :ep-black:`failed_retention_period` :ep-red:`(int)` default: 3 |p|                                       |
   |    | :ep-black:`log_retention_period` :ep-red:`(int)` default: 7  |p|                                         |
   |    | :ep-black:`log_level` :ep-red:`[disabled, error, debug]` default: *error*                                |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                                               |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.put("https://<server:port>/settings", json={"private_key":"123",`                  |
   |    | :ep-black-s:`"successful_retention_period": 1, "failed_retention_period": 7, "log_retention_period": 5,` |
   |    | :ep-black-s:`"log_level": "debug"}, verify=False).json()`                                                |
   +----+----------------------------------------------------------------------------------------------------------+

|
|



.. _alyvix_service_restful_api_sessions:

*****************
Session Endpoints
*****************

Retrieve or set both the top-level settings for all Sessions on the specified Alyvix Node,
or the settings for a specific Session.

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +---------------------------------------------------------------------------------------+
   | :lfs:`GET /sessions`                                                                  |
   +----+----------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                   |
   +----+----------------------------------------------------------------------------------+
   |    | Retrieve the top-level settings for all sessions on this Alyvix Node.            |
   +----+----------------------------------------------------------------------------------+
   | :lfs:`Required/Optional Arguments:`                                                   |
   +----+----------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                   |
   +----+----------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                       |
   +----+----------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.get(https://<server:port>/sessions, verify=False).json()`  |
   +----+----------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +---------------------------------------------------------------------------------------------------------------+
   | :lfs:`POST /sessions`                                                                                         |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | Update the settings for all Sessions on this Alvyix Node.                                                |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Required Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black:`domain` :ep-red:`(string)` |p|                                                                |
   |    | :ep-black:`username` :ep-red:`(string)` |p|                                                              |
   |    | :ep-black:`password` :ep-red:`(string)` |p|                                                              |
   |    | :ep-black:`width` :ep-red:`(int)` |p|                                                                    |
   |    | :ep-black:`height` :ep-red:`(int)` |p|                                                                   |
   |    | :ep-black:`scaling_factor` :ep-red:`(int)`                                                               |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Optional Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black:`testcase_waiting_period` :ep-red:`(int)` default: 0 |p|                                       |
   |    | :ep-black:`session_waiting_period` :ep-red:`(int)` default: 0                                            |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                                               |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.post("https://<server:port>/sessions", json={"domain":"dm", "username":`           |
   |    | :ep-black-s:`"AlyvixUser04", "password": "abc123", "width": 1920, "height": 1080, "scaling_factor":`     |
   |    | :ep-black-s:`100, "testcase_waiting_period": 1, "session_waiting_period": 5}, verify=False).json()`      |
   +----+----------------------------------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +---------------------------------------------------------------------------------------------------------------+
   | :lfs:`PUT /sessions/<id>`                                                                                     |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | Update the settings for the specified Session on this Alyvix Node.                                       |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Required Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Optional Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`password` :ep-red:`(string)` default: *null* |p|                                                |
   |    | :ep-red:`width` :ep-red:`(int)` default: *null* |p|                                                      |
   |    | :ep-red:`height` :ep-red:`(int)` default: *null* |p|                                                     |
   |    | :ep-red:`scaling_factor` :ep-red:`(int)` default: *null* |p|                                             |
   |    | :ep-red:`control` :ep-red:`[play, break, stop]` default: *null* |p|                                      |
   |    | :ep-red:`test_case_list` :ep-red:`[{id, enabled}, {...}]` default: *null* |p|                            |
   |    | :ep-red:`testcase_waiting_period` :ep-red:`(int)` default: 0 |p|                                         |
   |    | :ep-red:`session_waiting_period` :ep-red:`(int)` default: 0                                              |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Examples:`                                                                                              |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.put("https://<server:port>/sessions/1", json={"control": "break"}, verify=False)`  |
   |    | |br|                                                                                                     |
   |    | :ep-black-s:`requests.put("https://<server:port>/sessions/1", json={"test_case_list": [{"id": 1,`        |
   |    | :ep-black-s:`"enabled": True}, {"id": 2, "enabled": False}]}, verify=False).json()`                      |
   |    | |br|                                                                                                     |
   |    | :ep-black-s:`requests.put("https://<server:port>/sessions/1", json={"testcase_waiting_period": 1,`       |
   |    | :ep-black-s:`"session_waiting_period": 5}, verify=False).json()`                                         |
   +----+----------------------------------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +---------------------------------------------------------------------------------------------+
   | :lfs:`DELETE /sessions/<id>`                                                                |
   +----+----------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                         |
   +----+----------------------------------------------------------------------------------------+
   |    | Completely remove the specified Session from this Alyvix Node.                         |
   +----+----------------------------------------------------------------------------------------+
   | :lfs:`Required/Optional Arguments:`                                                         |
   +----+----------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                         |
   +----+----------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                             |
   +----+----------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.delete("https://<server:port>/sessions/1", verify=False).json()` |
   +----+----------------------------------------------------------------------------------------+

|
|



.. _alyvix_service_restful_api_testcases:

*******************
Test Case Endpoints
*******************

Retrieve, set or remove information about Alyvix test cases, including file names, settings,
and data measures.

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +--------------------------------------------------------------------------------------------------+
   | :lfs:`GET /testcase-filenames`                                                                   |
   +----+---------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                              |
   +----+---------------------------------------------------------------------------------------------+
   |    | Retrieve the list of file names in the configured test case directory on this Alyvix Node.  |
   +----+---------------------------------------------------------------------------------------------+
   | :lfs:`Required or Optional Arguments:`                                                           |
   +----+---------------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                              |
   +----+---------------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                                  |
   +----+---------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.get("https://<server:port>/testcase-filenames", verify=False).json()` |
   +----+---------------------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +------------------------------------------------------------------------------------------+
   | :lfs:`GET /testcases`                                                                    |
   +----+-------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                      |
   +----+-------------------------------------------------------------------------------------+
   |    | Retrieve the list of test cases that have been created on the                       |
   |    | current Alyvix Node and are thus available to be added to a Session.                |
   +----+-------------------------------------------------------------------------------------+
   | :lfs:`Required or Optional Arguments:`                                                   |
   +----+-------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                      |
   +----+-------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                          |
   +----+-------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.get("https://<server:port>/testcases", verify=False).json()`  |
   +----+-------------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +----------------------------------------------------------------------------------------------------------------+
   | :lfs:`POST /testcases`                                                                                         |
   +----+-----------------------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                                            |
   +----+-----------------------------------------------------------------------------------------------------------+
   |    | Add a new test case configuration, with optional run time arguments, to the list of available test cases. |
   +----+-----------------------------------------------------------------------------------------------------------+
   | :lfs:`Required Arguments:`                                                                                     |
   +----+-----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`name` :ep-red:`(string)` |p|                                                                     |
   |    | :ep-red:`filename` :ep-red:`(string)`                                                                     |
   +----+-----------------------------------------------------------------------------------------------------------+
   | :lfs:`Optional Arguments:`                                                                                     |
   +----+-----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`arguments` :ep-red:`(string)` default *null*                                                     |
   +----+-----------------------------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                                                |
   +----+-----------------------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.post("https://<server:port>/testcases", json={"name": "visittrentino",`             |
   |    | :ep-black-s:`"filename": "file01.alyvix", "arguments": "123"}, verify= False).json()`                     |
   +----+-----------------------------------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +---------------------------------------------------------------------------------------------------------------+
   | :lfs:`PUT /testcases/<id>`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | Add a newly user-created test case, overwriting a specific existing one (indicated by position).         |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Required Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Optional Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`filename` :ep-red:`(string)` default *null* |p|                                                 |
   |    | :ep-red:`arguments` :ep-red:`(string)` default *null*                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                                               |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.put("https://<server:port>/testcases/1", json={"filename": "file01.alyvix",`       |
   |    | :ep-black-s:`"arguments": "123"}, verify=False).json()`                                                  |
   +----+----------------------------------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +---------------------------------------------------------------------------------------------------------------+
   | :lfs:`DELETE /testcases/<id>`                                                                                 |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | Remove a specific existing test case by referencing its position in the list.                            |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Required/Optional Arguments:`                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                                               |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.delete("https://<server:port>/testcases/1", verify=False).json()`                  |
   +----+----------------------------------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +---------------------------------------------------------------------------------------------------------------+
   | :lfs:`GET /testcases/<id>/measures`                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | Retrieve the list of recorded measures (all of them if not restricted) for a particular test case.       |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Required Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Optional Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`session_id` :ep-red:`(int)` default *all* |p|                                                   |
   |    | :ep-red:`test_case_from` :ep-red:`(string)` default *last runcode* |p|                                   |
   |    | :ep-red:`test_case_to` :ep-red:`(string)` default *last runcode* |p|                                     |
   |    | :ep-red:`test_case_screenshot` :ep-red:`(bool)` default *false*                                          |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                                               |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.get("https://<server:port>/testcases/1/measures?test_case_from=20220501120000&`    |
   |    | :ep-black-s:`test_case_to=20220631120000&test_case_screenshot=false", verify=False).json()`              |
   +----+----------------------------------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +---------------------------------------------------------------------------------------------------------------+
   | :lfs:`GET /testcases/<id>/measures/<runcode>`                                                                 |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | Get a single test case measure by specifying the test case position and the code of the test case run.   |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Required Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Optional Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`test_case_screenshot` :ep-red:`(bool)` default *false*                                          |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                                               |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.get("https://<server:port>/testcases/1/measures/myserverDMAlyvixUser01`            |
   |    | :ep-black-s:`visittrentino1654073793?test_case_screenshot=false", verify=False).json()`                  |
   +----+----------------------------------------------------------------------------------------------------------+

|
|



.. _alyvix_service_restful_api_logging:

*****************
Logging Endpoints
*****************

Set or retrieve content and settings for creating annotations on individual
test case runs.

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +-------------------------------------------------------------------------------------+
   | :lfs:`GET /log`                                                                     |
   +----+--------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                 |
   +----+--------------------------------------------------------------------------------+
   |    | Retrieve the list of annotated log messages on test case reports, filterable   |
   |    | by date, source or severity level.                                             |
   +----+--------------------------------------------------------------------------------+
   | :lfs:`Required Arguments:`                                                          |
   +----+--------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                 |
   +----+--------------------------------------------------------------------------------+
   | :lfs:`Optional Arguments:`                                                          |
   +----+--------------------------------------------------------------------------------+
   |    | :ep-red:`log_from` :ep-red:`(string)` default *null* |p|                       |
   |    | :ep-red:`log_to` :ep-red:`(string)` default *null* |p|                         |
   |    | :ep-red:`log_source` :ep-red:`[SERVER, CLIENT, EXTERNAL]` default *null* |p|   |
   |    | :ep-red:`log_level` :ep-red:`[DEBUG, WARNING, CRITICAL]` default *null*        |
   +----+--------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                     |
   +----+--------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.get("https://<server:port>/log", verify=False).json()`   |
   +----+--------------------------------------------------------------------------------+

|

.. table::
   :class: tablecell-endpoint large-font-size
   :widths: 5 95

   +---------------------------------------------------------------------------------------------------------------+
   | :lfs:`POST /log`                                                                                              |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Description:`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | Add a new annotation message to the log, specifying a severity level (date and source are automatic).    |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Required Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`message` :ep-red:`(string)` |p|                                                                 |
   |    | :ep-red:`log_level` :ep-red:`[DEBUG, WARNING, CRITICAL]`                                                 |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Optional Arguments:`                                                                                    |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-red:`None`                                                                                           |
   +----+----------------------------------------------------------------------------------------------------------+
   | :lfs:`Example:`                                                                                               |
   +----+----------------------------------------------------------------------------------------------------------+
   |    | :ep-black-s:`requests.post("https://<server:port>/log", json={"log_level": "DEBUG", "message": "text"},` |
   |    | :ep-black-s:`verify=False).json()`                                                                       |
   +----+----------------------------------------------------------------------------------------------------------+

|
